class Solution {
public:
    int minEatingSpeed(vector<int>& piles, int h) {
        int start = 1;
        int end = *max_element(piles.begin(), piles.end());
        int ans = end;
        int n = piles.size();
        if(!start){
            start = 1;
        }
        while(start <= end){
            int mid = start + (end - start)/2;
            long totalTime = 0;
            for(int i = 0; i < n; i++){
                totalTime += piles[i]/mid;
                // if by dividing we get it points so mod will add one
                if(piles[i]%mid){
                    totalTime++;
                }
            }
            if(totalTime > h){
                start = mid + 1;
            }
            else{
                ans = mid;
                end = mid - 1;
            }
        }
        return ans;
    }
};









