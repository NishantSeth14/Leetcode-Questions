class Solution {
public:

    int n;
    int width;
    int t[1001][1001];
    int solve(vector<vector<int>>& books, int i, int remainW, int maxH){
        if(i >= n){
            return maxH;
        }

        if(t[i][remainW] != -1) {
            return t[i][remainW];
        }

        int booksH = books[i][1];
        int booksW = books[i][0];

        int keep = INT_MAX;
        int skip = INT_MAX;

        if(booksW <= remainW){
            keep = solve(books, i+1, remainW - booksW, max(maxH, booksH));
        }
        skip = maxH + solve(books, i+1, width - booksW, booksH);
        
        return t[i][remainW] = min(keep, skip);
    }

    int minHeightShelves(vector<vector<int>>& books, int shelfWidth) {
        memset(t, -1, sizeof(t));
        n = books.size();
        width = shelfWidth;
        int remainW = shelfWidth;
        return solve(books, 0, remainW, 0);
    }
};




















