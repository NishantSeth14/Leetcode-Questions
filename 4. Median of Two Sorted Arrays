class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        std::vector<int> merged;

        for (int i = 0; i < nums1.size(); i++) {
            merged.push_back(nums1[i]);
        }

        for (int i = 0; i < nums2.size(); i++) {
            merged.push_back(nums2[i]);
        }

        std::sort(merged.begin(), merged.end());

        int n = merged.size();
        double ans = 0;
        int s = 0;
        int e = n - 1;
        int mid = s + (e - s) / 2;

        if (n % 2 == 0) {
            int first = merged[mid];
            int second = merged[mid + 1];
            ans = static_cast<double>(first + second) / 2.0;
        } else {
            ans = merged[mid];
        }
        return ans;
    }
};
