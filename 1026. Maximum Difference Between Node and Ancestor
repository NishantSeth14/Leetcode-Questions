/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int ans = 0;
    int maxAncestorDiff(TreeNode* root) {
        dfs(root);
        return ans;
    }
    pair<int,int> dfs(TreeNode* root){
        if(root == NULL){
            return {INT_MAX, INT_MIN};
        }
        auto [leftmin, leftmax] = dfs(root->left);
        auto [rightmin, rightmax] = dfs(root->right);
        auto curmin = min({root->val, leftmin, rightmin}), 
             curmax = max({root->val, leftmax, rightmax});
        ans = max({ans, root->val - curmin, curmax - root->val});
        return {curmin,curmax};
    }
};














