this will give memory exceeded

class Solution {
public:

    bool palindrome(string s){
        int j = 0;
        int k = s.size()-1;
        bool ans = true;
        while(j <= k){
            if(s[j] == s[k]){
                j++;
                k--;
            }
            else{
                ans = false;
                break;
            }
        }
        return ans;
    }

    bool validPalindrome(string s) {
        for (int i = 0; i < s.size(); i++) {
            string modified_s = s;
            modified_s.erase(i, 1);
            bool check = palindrome(modified_s);
            if (check == true) {
                return true;
            }
        }
        return false;
    }
};

2nd code


class Solution {
public:

    bool check(string s, int i, int j){
        int start = i;
        int end = j;
        bool ans = true;
        while(start <= end){
            if(s[start] == s[end]){
                start++;
                end--;
            }
            else{
                ans = false;
                break;
            }
        }
        return ans;
    }

    bool validPalindrome(string s) {
        int i = 0;
        int j = s.length() - 1;
        while(i <= j){
            if(s[i] != s[j]){
                return check(s,i+1,j) || check(s, i, j-1);
            }
            else{
                i++;
                j--;
            }
        }
        return true;
    }
};














