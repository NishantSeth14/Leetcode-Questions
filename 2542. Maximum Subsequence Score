class Solution {
public:
    long long maxScore(vector<int>& nums1, vector<int>& nums2, int k) {
        int n = nums1.size();
        vector<pair<int,int> > pairs;
        for(int i = 0; i < n; i++){
            pairs.push_back({nums2[i], nums1[i]});
        }
        sort(pairs.begin(), pairs.end());
        reverse(pairs.begin(), pairs.end());
        priority_queue<int, vector<int>, greater<int> > pq;
        long long sum = 0;
        long long ans = 0;
        for(int i = 0; i < n; i++){
            pq.push(pairs[i].second);
            sum += pairs[i].second;
            if(pq.size() > k){
                sum -= pq.top();
                pq.pop();
            }
            if(pq.size() == k){
                ans = max(ans, (long long)sum*pairs[i].first);
            }
        }
        return ans;
    }
};
