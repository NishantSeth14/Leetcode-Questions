//brute force

class Solution {
public:
    int minKBitFlips(vector<int>& nums, int k) {
        int flips = 0;
        for(int i = 0; i < nums.size(); i++){
            if(nums[i] == 0){
                if(i + k > nums.size()){
                    return -1;
                }
                for(int j = i; j < i + k; j++){
                    nums[j] = !nums[j];
                    
                }
                flips++;
            }
        }
        return flips;
    }
};


// next approach using queue and sliding window

class Solution {
public:
    int minKBitFlips(vector<int>& nums, int k) {
        queue<int> q;
        int flips = 0;
        int n = nums.size();
        for(int i = 0; i < n; i++){
            if(!q.empty() && q.front() < i){
                q.pop();
            }
            if(q.size() % 2 == nums[i]){
                if(i+k > n){
                    return -1;
                }
                q.push(i+k-1);
                flips++;
            }
        }
        return flips;
    }
};
