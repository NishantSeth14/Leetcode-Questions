class Solution {
public:

    string binaryCon(int num){
        string binaryNum = "";
        while(num > 0){
            if(num % 2 == 0){
                binaryNum += '0';
            }
            else{
                binaryNum += '1';
            }
            num = num / 2;
        }
        reverse(binaryNum.begin(), binaryNum.end());
        return binaryNum;
    }

    bool isValid(string& fun){
        for(int i = 0; i < fun.size()-1; i++){
            if(fun[i] == '0' && fun[i+1] == '0'){
                return false;
            }
        }
        return true;
    }

    vector<string> validStrings(int n) {
        vector<string> ans;
        int limit = pow(2,n);
        for(int i = 0; i < limit; i++){
            string fun = binaryCon(i);
            while(fun.size() < n){
                fun = '0' + fun;
            }
            if(isValid(fun)){
                ans.push_back(fun);
            }
        }
        return ans;
    }
};
