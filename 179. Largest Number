class Solution {
public:
    
    static bool check(string &s1, string &s2){
        return (s1+s2) >= (s2+s1);
    }
    
    string largestNumber(vector<int>& nums) {
        int x = 0;
        for(int i=0; i<nums.size(); i++){
            if(nums[i] == 0){
                x++;
            }
        }
        if(x == nums.size()) return "0";

        vector<string> s(nums.size(), "");
        for(int i=0; i<nums.size(); i++){
            s[i] = to_string(nums[i]);
        }
        sort(s.begin(),s.end(),check);
        string ans="";
        for(int i=0; i<s.size(); i++){
            ans += (s[i]);
        }
        return ans;
    }   
};

class Solution {
public:

    static bool mycomp(string a, string b){
        string t1 = a + b;
        string t2 = b + a;
        return t1 > t2;
    }

    string largestNumber(vector<int>& nums) {
        vector<string> snums;

        for(auto s : nums){
            snums.push_back(to_string(s));
        }
        sort(snums.begin(),snums.end(), mycomp);
        if(snums[0] == "0"){
            return "0";
        }
        string ans = "";
        for(auto c : snums){
            ans += c;
        }
        return ans;
    }
};









